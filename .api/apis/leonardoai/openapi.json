{
  "openapi": "3.0.0",
  "info": {
    "description": "Leonardo.Ai API OpenAPI specification.",
    "title": "Rest Endpoints",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "https://cloud.leonardo.ai/api/rest/v1",
      "description": "Leonardo.Ai API server"
    }
  ],
  "tags": [
    {
      "name": "User"
    },
    {
      "name": "Generation"
    },
    {
      "name": "InitImage"
    },
    {
      "name": "Variation"
    },
    {
      "name": "Dataset"
    },
    {
      "name": "Model"
    },
    {
      "name": "Element"
    },
    {
      "name": "Prompt"
    }
  ],
  "paths": {
    "/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user information",
        "description": "This endpoint will return your user information such as your user id, username, token renewal date and current amounts of the following: subscription tokens, gpt (prompt generation) tokens, and model training tokens",
        "operationId": "getUserSelf",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_details": {
                      "items": {
                        "description": "columns and relationships of \"user_details\"",
                        "nullable": false,
                        "properties": {
                          "user": {
                            "description": "columns and relationships of \"users\"",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "nullable": true,
                                "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                "title": "uuid",
                                "type": "string"
                              },
                              "username": {
                                "nullable": true,
                                "title": "String",
                                "type": "string",
                                "description": "Username of the user."
                              }
                            },
                            "title": "users",
                            "type": "object"
                          },
                          "tokenRenewalDate": {
                            "nullable": true,
                            "title": "timestamp",
                            "type": "string",
                            "description": "User Plan Token Renewal Date."
                          },
                          "paidTokens": {
                            "nullable": true,
                            "title": "Int",
                            "type": "integer",
                            "description": "Current balance of paid tokens the user has."
                          },
                          "subscriptionTokens": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer",
                            "description": "Current balance of user plan subscription tokens the user has."
                          },
                          "subscriptionGptTokens": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer",
                            "description": "Current balance of user plan GPT tokens the user has."
                          },
                          "subscriptionModelTokens": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer",
                            "description": "Current balance of model training tokens the user has."
                          },
                          "apiConcurrencySlots": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer",
                            "description": "API Concurrency Slots."
                          },
                          "apiPaidTokens": {
                            "nullable": true,
                            "title": "Int",
                            "type": "integer",
                            "description": "Current balance of API paid tokens the user has."
                          },
                          "apiSubscriptionTokens": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer",
                            "description": "Current balance of Enterprise API subscriptions tokens the user has."
                          },
                          "apiPlanTokenRenewalDate": {
                            "nullable": true,
                            "title": "timestamp",
                            "type": "string",
                            "description": "API Plan Token Renewal Date."
                          }
                        },
                        "title": "user_details",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /me"
          }
        }
      }
    },
    "/generations": {
      "post": {
        "tags": [
          "Generation"
        ],
        "summary": "Create a Generation of Images",
        "description": "This endpoint will generate images",
        "operationId": "createGeneration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "alchemy": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable to use Alchemy. Note: The appropriate Alchemy version is selected for the specified model. For example, XL models will use Alchemy V2.",
                    "default": true
                  },
                  "contrastRatio": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Contrast Ratio to use with Alchemy. Must be a float between 0 and 1 inclusive."
                  },
                  "controlNet": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable to use ControlNet. Requires an init image to be provided. Requires a model based on SD v1.5"
                  },
                  "controlNetType": {
                    "type": "string",
                    "nullable": false,
                    "title": "controlnet_type",
                    "enum": [
                      "POSE",
                      "CANNY",
                      "DEPTH"
                    ],
                    "description": "The type of ControlNet to use."
                  },
                  "elements": {
                    "items": {
                      "nullable": false,
                      "properties": {
                        "akUUID": {
                          "nullable": true,
                          "title": "String",
                          "type": "string",
                          "description": "Unique identifier for element. Elements can be found from the List Elements endpoint."
                        },
                        "weight": {
                          "nullable": true,
                          "title": "Float",
                          "type": "number",
                          "description": "Weight for the element"
                        }
                      },
                      "title": "element_input",
                      "type": "object"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "expandedDomain": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable to use the Expanded Domain feature of Alchemy."
                  },
                  "fantasyAvatar": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable to use the Fantasy Avatar feature."
                  },
                  "guidance_scale": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "How strongly the generation should reflect the prompt. 7 is recommended. Must be between 1 and 20."
                  },
                  "height": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The input height of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.",
                    "default": 768
                  },
                  "highContrast": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable to use the High Contrast feature of Prompt Magic. Note: Controls RAW mode. Set to false to enable RAW mode."
                  },
                  "highResolution": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable to use the High Resolution feature of Prompt Magic."
                  },
                  "imagePrompts": {
                    "items": {
                      "nullable": true,
                      "title": "String",
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "imagePromptWeight": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number"
                  },
                  "init_generation_image_id": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The ID of an existing image to use in image2image."
                  },
                  "init_image_id": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The ID of an Init Image to use in image2image."
                  },
                  "init_strength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How strongly the generated images should reflect the original image in image2image. Must be a float between 0.1 and 0.9."
                  },
                  "modelId": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The model ID used for image generation. If not provided, uses sd_version to determine the version of Stable Diffusion to use. In-app, model IDs are under the Finetune Models menu. Click on the platform model or your custom model, then click View More. For platform models, you can also use the List Platform Models API.",
                    "default": "b24e16ff-06e3-43eb-8d33-4416c2d75876"
                  },
                  "negative_prompt": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The negative prompt used for the image generation"
                  },
                  "num_images": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The number of images to generate. Must be between 1 and 8. If either width or height is over 768, must be between 1 and 4.",
                    "default": 4
                  },
                  "num_inference_steps": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The Step Count to use for the generation. Must be between 10 and 60. Default is 15."
                  },
                  "photoReal": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable the photoReal feature. Requires enabling alchemy and unspecifying modelId (for photoRealVersion V1)."
                  },
                  "photoRealVersion": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The version of photoReal to use. Must be v1 or v2."
                  },
                  "photoRealStrength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Depth of field of photoReal. Must be 0.55 for low, 0.5 for medium, or 0.45 for high. Defaults to 0.55 if not specified."
                  },
                  "presetStyle": {
                    "type": "string",
                    "nullable": true,
                    "title": "sd_generation_style",
                    "enum": [
                      "ANIME",
                      "BOKEH",
                      "CINEMATIC",
                      "CINEMATIC_CLOSEUP",
                      "CREATIVE",
                      "DYNAMIC",
                      "ENVIRONMENT",
                      "FASHION",
                      "FILM",
                      "FOOD",
                      "GENERAL",
                      "HDR",
                      "ILLUSTRATION",
                      "LEONARDO",
                      "LONG_EXPOSURE",
                      "MACRO",
                      "MINIMALISTIC",
                      "MONOCHROME",
                      "MOODY",
                      "NONE",
                      "NEUTRAL",
                      "PHOTOGRAPHY",
                      "PORTRAIT",
                      "RAYTRACED",
                      "RENDER_3D",
                      "RETRO",
                      "SKETCH_BW",
                      "SKETCH_COLOR",
                      "STOCK_PHOTO",
                      "VIBRANT",
                      "UNPROCESSED"
                    ],
                    "description": "The style to generate images with. When photoReal is enabled, refer to the Guide section for a full list. When alchemy is disabled, use LEONARDO or NONE. When alchemy is enabled, use ANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE.",
                    "default": "DYNAMIC"
                  },
                  "prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The prompt used to generate images",
                    "default": "A majestic cat in the snow"
                  },
                  "promptMagic": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Enable to use Prompt Magic."
                  },
                  "promptMagicStrength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Strength of prompt magic. Must be a float between 0.1 and 1.0"
                  },
                  "promptMagicVersion": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "Prompt magic version v2 or v3, for use when promptMagic: true"
                  },
                  "public": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Whether the generated images should show in the community feed."
                  },
                  "scheduler": {
                    "type": "string",
                    "nullable": false,
                    "title": "sd_generation_schedulers",
                    "enum": [
                      "KLMS",
                      "EULER_ANCESTRAL_DISCRETE",
                      "EULER_DISCRETE",
                      "DDIM",
                      "DPM_SOLVER",
                      "PNDM",
                      "LEONARDO"
                    ],
                    "description": "The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified."
                  },
                  "sd_version": {
                    "type": "string",
                    "nullable": false,
                    "title": "sd_versions",
                    "enum": [
                      "v1_5",
                      "v2",
                      "v3",
                      "SDXL_0_8",
                      "SDXL_0_9",
                      "SDXL_1_0",
                      "SDXL_LIGHTNING"
                    ],
                    "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                  },
                  "seed": {
                    "type": "integer",
                    "nullable": true,
                    "title": "bigint"
                  },
                  "tiling": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Whether the generated images should tile on all axis."
                  },
                  "transparency": {
                    "nullable": true,
                    "title": "TransparencyType",
                    "type": "string",
                    "enum": [
                      "disabled",
                      "foreground_only"
                    ],
                    "description": "Which type of transparency this image should use"
                  },
                  "unzoom": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Whether the generated images should be unzoomed (requires unzoomAmount and init_image_id to be set)."
                  },
                  "unzoomAmount": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How much the image should be unzoomed (requires an init_image_id and unzoom to be set to true)."
                  },
                  "upscaleRatio": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How much the image should be upscaled. (Enterprise Only)"
                  },
                  "weighting": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How much weighting to use for ControlNet. This parameter works with controlNet and controlNetType."
                  },
                  "width": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The input width of the images. Must be between 32 and 1024 and be a multiple of 8. Note: Input resolution is not always the same as output resolution due to upscaling from other features.",
                    "default": 1024
                  }
                },
                "type": "object",
                "required": [
                  "prompt"
                ]
              }
            }
          },
          "description": "Query parameters to be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sdGenerationJob": {
                      "nullable": true,
                      "properties": {
                        "generationId": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "type": "integer",
                          "description": "API Credits Cost for Image Generation. Available for Production API Users."
                        }
                      },
                      "title": "SDGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /generations"
          }
        }
      }
    },
    "/generations/{id}": {
      "get": {
        "tags": [
          "Generation"
        ],
        "summary": "Get a Single Generation",
        "description": "This endpoint will provide information about a specific generation",
        "operationId": "getGenerationById",
        "parameters": [
          {
            "required": true,
            "description": "The ID of the generation to return.",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "generations_by_pk": {
                      "description": "columns and relationships of \"generations\"",
                      "nullable": true,
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "generated_images": {
                          "items": {
                            "description": "columns and relationships of \"generated_images\"",
                            "nullable": false,
                            "properties": {
                              "generated_image_variation_generics": {
                                "items": {
                                  "description": "columns and relationships of \"generated_image_variation_generic\"",
                                  "nullable": false,
                                  "properties": {
                                    "id": {
                                      "nullable": true,
                                      "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                      "title": "uuid",
                                      "type": "string"
                                    },
                                    "status": {
                                      "type": "string",
                                      "nullable": false,
                                      "title": "job_status",
                                      "enum": [
                                        "PENDING",
                                        "COMPLETE",
                                        "FAILED"
                                      ],
                                      "description": "The status of the current task."
                                    },
                                    "transformType": {
                                      "type": "string",
                                      "nullable": false,
                                      "title": "VARIATION_TYPE",
                                      "enum": [
                                        "OUTPAINT",
                                        "INPAINT",
                                        "UPSCALE",
                                        "UNZOOM",
                                        "NOBG"
                                      ],
                                      "description": "The type of variation."
                                    },
                                    "url": {
                                      "nullable": true,
                                      "title": "String",
                                      "type": "string"
                                    }
                                  },
                                  "title": "generated_image_variation_generic",
                                  "type": "object"
                                },
                                "nullable": false,
                                "type": "array"
                              },
                              "fantasyAvatar": {
                                "nullable": true,
                                "title": "Boolean",
                                "type": "boolean",
                                "description": "If fantasyAvatar feature was used."
                              },
                              "id": {
                                "nullable": true,
                                "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                "title": "uuid",
                                "type": "string"
                              },
                              "imageToVideo": {
                                "nullable": true,
                                "title": "Boolean",
                                "type": "boolean",
                                "description": "If it is an image to video generation."
                              },
                              "likeCount": {
                                "nullable": false,
                                "title": "Int",
                                "type": "integer"
                              },
                              "motion": {
                                "nullable": true,
                                "title": "Boolean",
                                "type": "boolean",
                                "description": "If generation is of motion type."
                              },
                              "motionModel": {
                                "nullable": true,
                                "title": "String",
                                "type": "string",
                                "description": "The name of the motion model."
                              },
                              "motionMP4URL": {
                                "nullable": true,
                                "title": "String",
                                "type": "string",
                                "description": "The URL of the motion MP4."
                              },
                              "motionStrength": {
                                "nullable": true,
                                "title": "Int",
                                "type": "integer",
                                "description": "The motion strength."
                              },
                              "nsfw": {
                                "nullable": false,
                                "title": "Boolean",
                                "type": "boolean"
                              },
                              "url": {
                                "nullable": false,
                                "title": "String",
                                "type": "string"
                              }
                            },
                            "title": "generated_images",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        },
                        "generation_elements": {
                          "items": {
                            "description": "This table captures the elements that are applied to Generations.",
                            "nullable": false,
                            "properties": {
                              "id": {
                                "type": "integer",
                                "nullable": true,
                                "title": "bigint"
                              },
                              "lora": {
                                "description": "Element used for the generation.",
                                "nullable": true,
                                "properties": {
                                  "akUUID": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Unique identifier for the element. Elements can be found from the List Elements endpoint."
                                  },
                                  "baseModel": {
                                    "type": "string",
                                    "nullable": false,
                                    "title": "sd_versions",
                                    "enum": [
                                      "v1_5",
                                      "v2",
                                      "v3",
                                      "SDXL_0_8",
                                      "SDXL_0_9",
                                      "SDXL_1_0",
                                      "SDXL_LIGHTNING"
                                    ],
                                    "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                                  },
                                  "description": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Description for the element"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Name of the element"
                                  },
                                  "urlImage": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "URL of the element image"
                                  },
                                  "weightDefault": {
                                    "nullable": true,
                                    "type": "integer",
                                    "description": "Default weight for the element"
                                  },
                                  "weightMax": {
                                    "nullable": true,
                                    "type": "integer",
                                    "description": "Maximum weight for the element"
                                  },
                                  "weightMin": {
                                    "nullable": true,
                                    "type": "integer",
                                    "description": "Minimum weight for the element"
                                  }
                                },
                                "title": "loras",
                                "type": "object"
                              },
                              "weightApplied": {
                                "type": "number",
                                "nullable": true,
                                "title": "numeric"
                              }
                            },
                            "title": "generation_elements",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        },
                        "guidanceScale": {
                          "type": "number",
                          "nullable": true,
                          "title": "float8"
                        },
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "imageHeight": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "imageWidth": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "inferenceSteps": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer"
                        },
                        "initStrength": {
                          "type": "number",
                          "nullable": true,
                          "title": "float8"
                        },
                        "modelId": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "negativePrompt": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "photoReal": {
                          "nullable": true,
                          "title": "Boolean",
                          "type": "boolean",
                          "description": "If photoReal feature was used."
                        },
                        "photoRealStrength": {
                          "nullable": true,
                          "title": "Float",
                          "type": "number",
                          "description": "Depth of field of photoReal used. 0.55 is low, 0.5 is medium, and 0.45 is high. Default is 0.55."
                        },
                        "presetStyle": {
                          "type": "string",
                          "nullable": true,
                          "title": "sd_generation_style",
                          "enum": [
                            "ANIME",
                            "BOKEH",
                            "CINEMATIC",
                            "CINEMATIC_CLOSEUP",
                            "CREATIVE",
                            "DYNAMIC",
                            "ENVIRONMENT",
                            "FASHION",
                            "FILM",
                            "FOOD",
                            "GENERAL",
                            "HDR",
                            "ILLUSTRATION",
                            "LEONARDO",
                            "LONG_EXPOSURE",
                            "MACRO",
                            "MINIMALISTIC",
                            "MONOCHROME",
                            "MOODY",
                            "NONE",
                            "NEUTRAL",
                            "PHOTOGRAPHY",
                            "PORTRAIT",
                            "RAYTRACED",
                            "RENDER_3D",
                            "RETRO",
                            "SKETCH_BW",
                            "SKETCH_COLOR",
                            "STOCK_PHOTO",
                            "VIBRANT",
                            "UNPROCESSED"
                          ],
                          "description": "The style to generate images with. When photoReal is enabled, refer to the Guide section for a full list. When alchemy is disabled, use LEONARDO or NONE. When alchemy is enabled, use ANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE.",
                          "default": "DYNAMIC"
                        },
                        "prompt": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "promptMagic": {
                          "nullable": true,
                          "title": "Boolean",
                          "type": "boolean",
                          "description": "If prompt magic was used."
                        },
                        "promptMagicStrength": {
                          "nullable": true,
                          "title": "Float",
                          "type": "number",
                          "description": "Strength of prompt magic used."
                        },
                        "promptMagicVersion": {
                          "nullable": true,
                          "title": "String",
                          "type": "string",
                          "description": "Version of prompt magic used."
                        },
                        "public": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "scheduler": {
                          "type": "string",
                          "nullable": false,
                          "title": "sd_generation_schedulers",
                          "enum": [
                            "KLMS",
                            "EULER_ANCESTRAL_DISCRETE",
                            "EULER_DISCRETE",
                            "DDIM",
                            "DPM_SOLVER",
                            "PNDM",
                            "LEONARDO"
                          ],
                          "description": "The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified."
                        },
                        "sdVersion": {
                          "type": "string",
                          "nullable": false,
                          "title": "sd_versions",
                          "enum": [
                            "v1_5",
                            "v2",
                            "v3",
                            "SDXL_0_8",
                            "SDXL_0_9",
                            "SDXL_1_0",
                            "SDXL_LIGHTNING"
                          ],
                          "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                        },
                        "seed": {
                          "type": "integer",
                          "nullable": true,
                          "title": "bigint"
                        },
                        "status": {
                          "type": "string",
                          "nullable": false,
                          "title": "job_status",
                          "enum": [
                            "PENDING",
                            "COMPLETE",
                            "FAILED"
                          ],
                          "description": "The status of the current task."
                        }
                      },
                      "title": "generations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /generations/{id}"
          }
        }
      },
      "delete": {
        "tags": [
          "Generation"
        ],
        "summary": "Delete a Single Generation",
        "description": "This endpoint deletes a specific generation",
        "operationId": "deleteGenerationById",
        "parameters": [
          {
            "required": true,
            "description": "The ID of the generation to delete.",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "delete_generations_by_pk": {
                      "description": "columns and relationships of \"generations\"",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "generations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /generations/{id}"
          }
        }
      }
    },
    "/generations/user/{userId}": {
      "get": {
        "tags": [
          "Generation"
        ],
        "summary": "Get generations by user ID",
        "description": "This endpoint returns all generations by a specific user",
        "operationId": "getGenerationsByUserId",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "userId",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "generations": {
                      "items": {
                        "description": "columns and relationships of \"generations\"",
                        "nullable": false,
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "nullable": false,
                            "title": "timestamp"
                          },
                          "generated_images": {
                            "items": {
                              "description": "columns and relationships of \"generated_images\"",
                              "nullable": false,
                              "properties": {
                                "generated_image_variation_generics": {
                                  "items": {
                                    "description": "columns and relationships of \"generated_image_variation_generic\"",
                                    "nullable": false,
                                    "properties": {
                                      "id": {
                                        "nullable": true,
                                        "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                        "title": "uuid",
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string",
                                        "nullable": false,
                                        "title": "job_status",
                                        "enum": [
                                          "PENDING",
                                          "COMPLETE",
                                          "FAILED"
                                        ],
                                        "description": "The status of the current task."
                                      },
                                      "transformType": {
                                        "type": "string",
                                        "nullable": false,
                                        "title": "VARIATION_TYPE",
                                        "enum": [
                                          "OUTPAINT",
                                          "INPAINT",
                                          "UPSCALE",
                                          "UNZOOM",
                                          "NOBG"
                                        ],
                                        "description": "The type of variation."
                                      },
                                      "url": {
                                        "nullable": true,
                                        "title": "String",
                                        "type": "string"
                                      }
                                    },
                                    "title": "generated_image_variation_generic",
                                    "type": "object"
                                  },
                                  "nullable": false,
                                  "type": "array"
                                },
                                "id": {
                                  "nullable": true,
                                  "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                  "title": "uuid",
                                  "type": "string"
                                },
                                "imageToVideo": {
                                  "nullable": true,
                                  "title": "Boolean",
                                  "type": "boolean",
                                  "description": "If it is an image to video generation."
                                },
                                "likeCount": {
                                  "nullable": false,
                                  "title": "Int",
                                  "type": "integer"
                                },
                                "motion": {
                                  "nullable": true,
                                  "title": "Boolean",
                                  "type": "boolean",
                                  "description": "If generation is of motion type."
                                },
                                "motionModel": {
                                  "nullable": true,
                                  "title": "String",
                                  "type": "string",
                                  "description": "The name of the motion model."
                                },
                                "motionMP4URL": {
                                  "nullable": true,
                                  "title": "String",
                                  "type": "string",
                                  "description": "The URL of the motion MP4."
                                },
                                "motionStrength": {
                                  "nullable": true,
                                  "title": "Int",
                                  "type": "integer",
                                  "description": "The motion strength."
                                },
                                "nsfw": {
                                  "nullable": false,
                                  "title": "Boolean",
                                  "type": "boolean"
                                },
                                "url": {
                                  "nullable": false,
                                  "title": "String",
                                  "type": "string"
                                }
                              },
                              "title": "generated_images",
                              "type": "object"
                            },
                            "nullable": false,
                            "type": "array"
                          },
                          "generation_elements": {
                            "items": {
                              "description": "This table captures the elements that are applied to a Generations, also the order and weightings used when applied.",
                              "nullable": false,
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "nullable": true,
                                  "title": "bigint"
                                },
                                "lora": {
                                  "description": "Element used for the generation.",
                                  "nullable": true,
                                  "properties": {
                                    "akUUID": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "Unique identifier for the element. Elements can be found from the List Elements endpoint."
                                    },
                                    "baseModel": {
                                      "type": "string",
                                      "nullable": false,
                                      "title": "sd_versions",
                                      "enum": [
                                        "v1_5",
                                        "v2",
                                        "v3",
                                        "SDXL_0_8",
                                        "SDXL_0_9",
                                        "SDXL_1_0",
                                        "SDXL_LIGHTNING"
                                      ],
                                      "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                                    },
                                    "description": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "Description for the element"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "Name of the element"
                                    },
                                    "urlImage": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "URL of the element image"
                                    },
                                    "weightDefault": {
                                      "nullable": true,
                                      "type": "integer",
                                      "description": "Default weight for the element"
                                    },
                                    "weightMax": {
                                      "nullable": true,
                                      "type": "integer",
                                      "description": "Maximum weight for the element"
                                    },
                                    "weightMin": {
                                      "nullable": true,
                                      "type": "integer",
                                      "description": "Minimum weight for the element"
                                    }
                                  },
                                  "title": "elements",
                                  "type": "object"
                                },
                                "weightApplied": {
                                  "type": "number",
                                  "nullable": true,
                                  "title": "numeric"
                                }
                              },
                              "title": "generation_elements",
                              "type": "object"
                            },
                            "nullable": false,
                            "type": "array"
                          },
                          "guidanceScale": {
                            "type": "number",
                            "nullable": true,
                            "title": "float8"
                          },
                          "id": {
                            "nullable": true,
                            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                            "title": "uuid",
                            "type": "string"
                          },
                          "imageHeight": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "imageWidth": {
                            "nullable": false,
                            "title": "Int",
                            "type": "integer"
                          },
                          "inferenceSteps": {
                            "nullable": true,
                            "title": "Int",
                            "type": "integer"
                          },
                          "initStrength": {
                            "type": "number",
                            "nullable": true,
                            "title": "float8"
                          },
                          "modelId": {
                            "nullable": true,
                            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                            "title": "uuid",
                            "type": "string"
                          },
                          "negativePrompt": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "photoReal": {
                            "nullable": true,
                            "title": "Boolean",
                            "type": "boolean",
                            "description": "If photoReal feature was used."
                          },
                          "photoRealStrength": {
                            "nullable": true,
                            "title": "Float",
                            "type": "number",
                            "description": "Depth of field of photoReal used. 0.55 is low, 0.5 is medium, and 0.45 is high. Default is 0.55."
                          },
                          "presetStyle": {
                            "type": "string",
                            "nullable": true,
                            "title": "sd_generation_style",
                            "enum": [
                              "ANIME",
                              "BOKEH",
                              "CINEMATIC",
                              "CINEMATIC_CLOSEUP",
                              "CREATIVE",
                              "DYNAMIC",
                              "ENVIRONMENT",
                              "FASHION",
                              "FILM",
                              "FOOD",
                              "GENERAL",
                              "HDR",
                              "ILLUSTRATION",
                              "LEONARDO",
                              "LONG_EXPOSURE",
                              "MACRO",
                              "MINIMALISTIC",
                              "MONOCHROME",
                              "MOODY",
                              "NONE",
                              "NEUTRAL",
                              "PHOTOGRAPHY",
                              "PORTRAIT",
                              "RAYTRACED",
                              "RENDER_3D",
                              "RETRO",
                              "SKETCH_BW",
                              "SKETCH_COLOR",
                              "STOCK_PHOTO",
                              "VIBRANT",
                              "UNPROCESSED"
                            ],
                            "description": "The style to generate images with. When photoReal is enabled, refer to the Guide section for a full list. When alchemy is disabled, use LEONARDO or NONE. When alchemy is enabled, use ANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE.",
                            "default": "DYNAMIC"
                          },
                          "prompt": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "promptMagic": {
                            "nullable": true,
                            "title": "Boolean",
                            "type": "boolean",
                            "description": "If prompt magic was used."
                          },
                          "promptMagicStrength": {
                            "nullable": true,
                            "title": "Float",
                            "type": "number",
                            "description": "Strength of prompt magic used."
                          },
                          "promptMagicVersion": {
                            "nullable": true,
                            "title": "String",
                            "type": "string",
                            "description": "Version of prompt magic used."
                          },
                          "public": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "scheduler": {
                            "type": "string",
                            "nullable": false,
                            "title": "sd_generation_schedulers",
                            "enum": [
                              "KLMS",
                              "EULER_ANCESTRAL_DISCRETE",
                              "EULER_DISCRETE",
                              "DDIM",
                              "DPM_SOLVER",
                              "PNDM",
                              "LEONARDO"
                            ],
                            "description": "The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified."
                          },
                          "sdVersion": {
                            "type": "string",
                            "nullable": false,
                            "title": "sd_versions",
                            "enum": [
                              "v1_5",
                              "v2",
                              "v3",
                              "SDXL_0_8",
                              "SDXL_0_9",
                              "SDXL_1_0",
                              "SDXL_LIGHTNING"
                            ],
                            "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                          },
                          "seed": {
                            "type": "integer",
                            "nullable": true,
                            "title": "bigint"
                          },
                          "status": {
                            "type": "string",
                            "nullable": false,
                            "title": "job_status",
                            "enum": [
                              "PENDING",
                              "COMPLETE",
                              "FAILED"
                            ],
                            "description": "The status of the current task."
                          }
                        },
                        "title": "generations",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /generations/user/{userId}"
          }
        }
      }
    },
    "/generations-texture": {
      "post": {
        "tags": [
          "Generation"
        ],
        "summary": "Create Texture Generation",
        "description": "This endpoint will generate a texture generation.",
        "operationId": "createTextureGeneration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "front_rotation_offset": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer"
                  },
                  "modelAssetId": {
                    "nullable": false,
                    "title": "String",
                    "type": "string"
                  },
                  "negative_prompt": {
                    "nullable": true,
                    "title": "String",
                    "type": "string"
                  },
                  "preview": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean"
                  },
                  "preview_direction": {
                    "nullable": true,
                    "title": "String",
                    "type": "string"
                  },
                  "prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string"
                  },
                  "sd_version": {
                    "nullable": true,
                    "title": "String",
                    "type": "string"
                  },
                  "seed": {
                    "type": "integer",
                    "nullable": true,
                    "title": "bigint"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "textureGenerationJob": {
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "type": "integer",
                          "description": "API Credits Cost for Texture Generation. Available for Production API Users."
                        }
                      },
                      "title": "TextureGenerationJobOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/v1/generations-texture"
          }
        }
      }
    },
    "/generations-motion-svd": {
      "post": {
        "tags": [
          "Generation"
        ],
        "summary": "Create SVD Motion Generation",
        "description": "This endpoint will generate a SVD motion generation.",
        "operationId": "createSVDMotionGeneration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "imageId": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The ID of the image, supports generated images, variation images, and init images."
                  },
                  "isPublic": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Whether the generation is public or not"
                  },
                  "isInitImage": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "If it is an init image uploaded by the user. This image is uploaded from endpoint: Upload init image."
                  },
                  "isVariation": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "If it is a variation image."
                  },
                  "motionStrength": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The motion strength."
                  }
                },
                "type": "object",
                "required": [
                  "imageId"
                ]
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sdGenerationJob": {
                      "nullable": true,
                      "properties": {
                        "generationId": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer",
                          "description": "API credits cost, available for Production API users."
                        }
                      },
                      "title": "MotionSvdGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /generations-motion-svd"
          }
        }
      }
    },
    "/generations-lcm": {
      "post": {
        "tags": [
          "Generation"
        ],
        "summary": "Create LCM Generation",
        "description": "This endpoint will generate a LCM image generation.",
        "operationId": "createLCMGeneration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "imageDataUrl": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "Image data used to generate image. In base64 format. Prefix: `data:image/jpeg;base64,`"
                  },
                  "prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The prompt used to generate images"
                  },
                  "guidance": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How strongly the generation should reflect the prompt. Must be a float between 0.5 and 20."
                  },
                  "strength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Creativity strength of generation. Higher strength will deviate more from the original image supplied in imageDataUrl. Must be a float between 0.1 and 1."
                  },
                  "requestTimestamp": {
                    "type": "string",
                    "nullable": false,
                    "title": "timestamp"
                  },
                  "style": {
                    "type": "string",
                    "nullable": true,
                    "title": "lcm_generation_style",
                    "enum": [
                      "ANIME",
                      "CINEMATIC",
                      "DIGITAL_ART",
                      "DYNAMIC",
                      "ENVIRONMENT",
                      "FANTASY_ART",
                      "ILLUSTRATION",
                      "PHOTOGRAPHY",
                      "RENDER_3D",
                      "RAYTRACED",
                      "SKETCH_BW",
                      "SKETCH_COLOR",
                      "VIBRANT",
                      "NONE"
                    ],
                    "description": "The style to generate LCM images with."
                  },
                  "steps": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The number of steps to use for the generation. Must be between 4 and 16."
                  },
                  "width": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "height": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "seed": {
                    "type": "integer",
                    "nullable": true,
                    "title": "bigint"
                  }
                },
                "type": "object",
                "required": [
                  "imageDataUrl",
                  "prompt"
                ]
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lcmGenerationJob": {
                      "nullable": true,
                      "properties": {
                        "imageDataUrl": {
                          "nullable": false,
                          "title": "Array of Strings",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "requestTimestamp": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer",
                          "description": "API credits cost, available for Production API users."
                        }
                      },
                      "title": "LcmGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /generations-lcm"
          }
        }
      }
    },
    "/lcm-instant-refine": {
      "post": {
        "tags": [
          "Generation"
        ],
        "summary": "Perform instant refine on a LCM image",
        "description": "This endpoint will perform instant refine on a LCM image",
        "operationId": "performInstantRefine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "imageDataUrl": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "Image data used to generate image. In base64 format. Prefix: `data:image/jpeg;base64,`"
                  },
                  "prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The prompt used to generate images"
                  },
                  "guidance": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How strongly the generation should reflect the prompt. Must be a float between 0.5 and 20."
                  },
                  "strength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Creativity strength of generation. Higher strength will deviate more from the original image supplied in imageDataUrl. Must be a float between 0.1 and 1."
                  },
                  "requestTimestamp": {
                    "type": "string",
                    "nullable": false,
                    "title": "timestamp"
                  },
                  "style": {
                    "type": "string",
                    "nullable": true,
                    "title": "lcm_generation_style",
                    "enum": [
                      "ANIME",
                      "CINEMATIC",
                      "DIGITAL_ART",
                      "DYNAMIC",
                      "ENVIRONMENT",
                      "FANTASY_ART",
                      "ILLUSTRATION",
                      "PHOTOGRAPHY",
                      "RENDER_3D",
                      "RAYTRACED",
                      "SKETCH_BW",
                      "SKETCH_COLOR",
                      "VIBRANT",
                      "NONE"
                    ],
                    "description": "The style to generate LCM images with."
                  },
                  "steps": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The number of steps to use for the generation. Must be between 4 and 16."
                  },
                  "width": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "height": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "seed": {
                    "type": "integer",
                    "nullable": true,
                    "title": "bigint"
                  }
                },
                "type": "object",
                "required": [
                  "imageDataUrl",
                  "prompt"
                ]
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lcmGenerationJob": {
                      "nullable": true,
                      "properties": {
                        "imageDataUrl": {
                          "nullable": false,
                          "title": "Array of Strings",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "requestTimestamp": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer",
                          "description": "API credits cost, available for Production API users."
                        }
                      },
                      "title": "LcmGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /lcm-instant-refine"
          }
        }
      }
    },
    "/lcm-inpainting": {
      "post": {
        "tags": [
          "Generation"
        ],
        "summary": "Perform inpainting on a LCM image",
        "description": "This endpoint will perform a inpainting on a LCM image",
        "operationId": "performInpaintingLCM",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "imageDataUrl": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "Image data used to generate image. In base64 format. Prefix: `data:image/jpeg;base64,`"
                  },
                  "maskDataUrl": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "Image data of the mask layer used for inpainting. In base64 format. Prefix: `data:image/jpeg;base64,`. Mask should be white on black where generation is applied to the white area."
                  },
                  "prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The prompt used to generate images"
                  },
                  "guidance": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How strongly the generation should reflect the prompt. Must be a float between 0.5 and 20."
                  },
                  "strength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Creativity strength of generation. Higher strength will deviate more from the original image supplied in imageDataUrl. Must be a float between 0.1 and 1."
                  },
                  "requestTimestamp": {
                    "type": "string",
                    "nullable": false,
                    "title": "timestamp"
                  },
                  "style": {
                    "type": "string",
                    "nullable": true,
                    "title": "lcm_generation_style",
                    "enum": [
                      "ANIME",
                      "CINEMATIC",
                      "DIGITAL_ART",
                      "DYNAMIC",
                      "ENVIRONMENT",
                      "FANTASY_ART",
                      "ILLUSTRATION",
                      "PHOTOGRAPHY",
                      "RENDER_3D",
                      "RAYTRACED",
                      "SKETCH_BW",
                      "SKETCH_COLOR",
                      "VIBRANT",
                      "NONE"
                    ],
                    "description": "The style to generate LCM images with."
                  },
                  "steps": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The number of steps to use for the generation. Must be between 4 and 16."
                  },
                  "width": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "height": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "seed": {
                    "type": "integer",
                    "nullable": true,
                    "title": "bigint"
                  }
                },
                "type": "object",
                "required": [
                  "imageDataUrl",
                  "maskDataUrl",
                  "prompt"
                ]
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lcmGenerationJob": {
                      "nullable": true,
                      "properties": {
                        "imageDataUrl": {
                          "nullable": false,
                          "title": "Array of Strings",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "requestTimestamp": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer",
                          "description": "API credits cost, available for Production API users."
                        }
                      },
                      "title": "LcmGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /lcm-inpainting"
          }
        }
      }
    },
    "/lcm-upscale": {
      "post": {
        "tags": [
          "Generation"
        ],
        "summary": "Perform Alchemy Upscale on a LCM image",
        "description": "This endpoint will perform Alchemy Upscale on a LCM image",
        "operationId": "performAlchemyUpscaleLCM",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "imageDataUrl": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "Image data used to generate image. In base64 format. Prefix: `data:image/jpeg;base64,`"
                  },
                  "prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The prompt used to generate images"
                  },
                  "guidance": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "How strongly the generation should reflect the prompt. Must be a float between 0.5 and 20."
                  },
                  "strength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Creativity strength of generation. Higher strength will deviate more from the original image supplied in imageDataUrl. Must be a float between 0.1 and 1."
                  },
                  "requestTimestamp": {
                    "type": "string",
                    "nullable": false,
                    "title": "timestamp"
                  },
                  "style": {
                    "type": "string",
                    "nullable": true,
                    "title": "lcm_generation_style",
                    "enum": [
                      "ANIME",
                      "CINEMATIC",
                      "DIGITAL_ART",
                      "DYNAMIC",
                      "ENVIRONMENT",
                      "FANTASY_ART",
                      "ILLUSTRATION",
                      "PHOTOGRAPHY",
                      "RENDER_3D",
                      "RAYTRACED",
                      "SKETCH_BW",
                      "SKETCH_COLOR",
                      "VIBRANT",
                      "NONE"
                    ],
                    "description": "The style to generate LCM images with."
                  },
                  "steps": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The number of steps to use for the generation. Must be between 4 and 16."
                  },
                  "width": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "height": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The output width of the image. Must be 512, 640 or 1024.",
                    "default": 512
                  },
                  "seed": {
                    "type": "integer",
                    "nullable": true,
                    "title": "bigint"
                  },
                  "refineCreative": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Refine creative"
                  },
                  "refineStrength": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "description": "Must be a float between 0.5 and 0.9."
                  }
                },
                "type": "object",
                "required": [
                  "imageDataUrl",
                  "prompt"
                ]
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lcmGenerationJob": {
                      "nullable": true,
                      "properties": {
                        "imageDataUrl": {
                          "nullable": false,
                          "title": "Array of Strings",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generationId": {
                          "nullable": false,
                          "title": "Array of Strings",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "variationId": {
                          "nullable": false,
                          "title": "Array of Strings",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generatedImageId": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "requestTimestamp": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "title": "Int",
                          "type": "integer",
                          "description": "API credits cost, available for Production API users."
                        }
                      },
                      "title": "LcmGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /lcm-upscale"
          }
        }
      }
    },
    "/generations-texture/model/{modelId}": {
      "get": {
        "tags": [
          "Generation"
        ],
        "summary": "Get texture generations by 3D Model ID",
        "description": "This endpoint gets the specific texture generations by the 3d model id.",
        "operationId": "getTextureGenerationsByModelId",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "required": true,
            "description": "_\"modelId\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "modelId",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "limit": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer"
                  },
                  "modelId": {
                    "nullable": true,
                    "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                    "title": "uuid",
                    "type": "string"
                  },
                  "offset": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "model_asset_texture_generations": {
                      "items": {
                        "description": "columns and relationships of \"model_asset_texture_generations\"",
                        "nullable": false,
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "nullable": false,
                            "title": "timestamp"
                          },
                          "id": {
                            "nullable": true,
                            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                            "title": "uuid",
                            "type": "string"
                          },
                          "model_asset_texture_images": {
                            "items": {
                              "description": "columns and relationships of \"model_asset_texture_images\"",
                              "nullable": false,
                              "properties": {
                                "id": {
                                  "nullable": true,
                                  "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                  "title": "uuid",
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "default": "NORMAL",
                                  "nullable": false,
                                  "title": "MODEL_ASSET_TEXTURE_TYPES",
                                  "enum": [
                                    "ALBEDO",
                                    "NORMAL",
                                    "ROUGHNESS",
                                    "DISPLACEMENT",
                                    "HDRP_MASK"
                                  ],
                                  "description": "When training model assets these are the texture types available to use."
                                },
                                "url": {
                                  "nullable": false,
                                  "title": "String",
                                  "type": "string"
                                }
                              },
                              "title": "model_asset_texture_images",
                              "type": "object"
                            },
                            "nullable": false,
                            "type": "array"
                          },
                          "negativePrompt": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "prompt": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "seed": {
                            "type": "integer",
                            "nullable": true,
                            "title": "bigint"
                          },
                          "status": {
                            "type": "string",
                            "nullable": false,
                            "title": "job_status",
                            "enum": [
                              "PENDING",
                              "COMPLETE",
                              "FAILED"
                            ],
                            "description": "The status of the current task."
                          }
                        },
                        "title": "model_asset_texture_generations",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/v1/generations-texture/model/{modelId}"
          }
        }
      }
    },
    "/generations-texture/{id}": {
      "get": {
        "tags": [
          "Generation"
        ],
        "summary": "Get Texture Generation by ID",
        "description": "This endpoint gets the specific texture generation.",
        "operationId": "getTextureGenerationById",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "required": true,
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": true,
                    "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                    "title": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "model_asset_texture_generations_by_pk": {
                      "description": "columns and relationships of \"model_asset_texture_generations\"",
                      "nullable": true,
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "model_asset_texture_images": {
                          "items": {
                            "description": "columns and relationships of \"model_asset_texture_images\"",
                            "nullable": false,
                            "properties": {
                              "id": {
                                "nullable": true,
                                "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                "title": "uuid",
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "default": "NORMAL",
                                "nullable": false,
                                "title": "MODEL_ASSET_TEXTURE_TYPES",
                                "enum": [
                                  "ALBEDO",
                                  "NORMAL",
                                  "ROUGHNESS",
                                  "DISPLACEMENT",
                                  "HDRP_MASK"
                                ],
                                "description": "When training model assets these are the texture types available to use."
                              },
                              "url": {
                                "nullable": false,
                                "title": "String",
                                "type": "string"
                              }
                            },
                            "title": "model_asset_texture_images",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        },
                        "negativePrompt": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "prompt": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "seed": {
                          "type": "integer",
                          "nullable": true,
                          "title": "bigint"
                        },
                        "status": {
                          "type": "string",
                          "nullable": false,
                          "title": "job_status",
                          "enum": [
                            "PENDING",
                            "COMPLETE",
                            "FAILED"
                          ],
                          "description": "The status of the current task."
                        }
                      },
                      "title": "model_asset_texture_generations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/v1/generations-texture/{id}"
          }
        }
      },
      "delete": {
        "tags": [
          "Generation"
        ],
        "summary": "Delete Texture Generation by ID",
        "description": "This endpoint deletes the specific texture generation.",
        "operationId": "deleteTextureGenerationById",
        "parameters": [
          {
            "required": true,
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": true,
                    "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                    "title": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_model_asset_texture_generations_by_pk": {
                      "description": "columns and relationships of \"model_asset_texture_generations\"",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "model_asset_texture_generations",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/v1/generations-texture/{id}"
          }
        }
      }
    },
    "/models-3d/upload": {
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Upload 3D Model",
        "description": "This endpoint returns presigned details to upload a 3D model to S3",
        "operationId": "uploadModelAsset",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "modelExtension": {
                    "nullable": false,
                    "title": "String",
                    "type": "string"
                  },
                  "name": {
                    "nullable": true,
                    "title": "String",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uploadModelAsset": {
                      "nullable": true,
                      "properties": {
                        "modelFields": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "modelId": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "modelKey": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "modelUrl": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "ModelAssetUploadOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/v1/models-3d/upload"
          }
        }
      }
    },
    "/models-3d/user/{userId}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get 3D models by user ID",
        "description": "This endpoint returns all 3D models by a specific user",
        "operationId": "get3DModelsByUserId",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "userId",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "nullable": true,
                    "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                    "title": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "model_assets": {
                      "items": {
                        "description": "columns and relationships of \"model_assets\"",
                        "nullable": false,
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "nullable": false,
                            "title": "timestamp"
                          },
                          "id": {
                            "nullable": true,
                            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                            "title": "uuid",
                            "type": "string"
                          },
                          "meshUrl": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string",
                            "nullable": false,
                            "title": "timestamp"
                          },
                          "userId": {
                            "nullable": true,
                            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                            "title": "uuid",
                            "type": "string"
                          }
                        },
                        "title": "model_assets",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/v1/models-3d/user/{userId}"
          }
        }
      }
    },
    "/models-3d/{id}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get 3D Model by ID",
        "description": "This endpoint gets the specific 3D model",
        "operationId": "get3DModelById",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "required": true,
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": true,
                    "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                    "title": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "model_assets_by_pk": {
                      "description": "columns and relationships of \"model_assets\"",
                      "nullable": true,
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "meshUrl": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "name": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "userId": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "model_assets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/v1/models-3d/{id}"
          }
        }
      },
      "delete": {
        "tags": [
          "Model"
        ],
        "summary": "Delete 3D Model by ID",
        "description": "This endpoint deletes the specific 3D Model",
        "operationId": "delete3DModelById",
        "parameters": [
          {
            "required": true,
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": true,
                    "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                    "title": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_model_assets_by_pk": {
                      "description": "columns and relationships of \"model_assets\"",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "model_assets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/v1/models-3d/{id}"
          }
        }
      }
    },
    "/init-image": {
      "post": {
        "tags": [
          "InitImage"
        ],
        "summary": "Upload init image",
        "description": "This endpoint returns presigned details to upload an init image to S3",
        "operationId": "uploadInitImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "extension": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "Has to be png, jpg, jpeg, or webp."
                  }
                },
                "required": [
                  "extension"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uploadInitImage": {
                      "nullable": true,
                      "properties": {
                        "fields": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "key": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "url": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "InitImageUploadOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /init-image"
          }
        }
      }
    },
    "/init-image/{id}": {
      "get": {
        "tags": [
          "InitImage"
        ],
        "summary": "Get single init image",
        "description": "This endpoint will return a single init image",
        "operationId": "getInitImageById",
        "parameters": [
          {
            "required": true,
            "description": "_\"id\" is required_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "init_images_by_pk": {
                      "description": "columns and relationships of \"init_images\"",
                      "nullable": true,
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "url": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "init_images",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /init-image/{id}"
          }
        }
      },
      "delete": {
        "tags": [
          "InitImage"
        ],
        "summary": "Delete init image",
        "description": "This endpoint deletes an init image",
        "operationId": "deleteInitImageById",
        "parameters": [
          {
            "required": true,
            "description": "_\"id\" is required_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "delete_init_images_by_pk": {
                      "description": "columns and relationships of \"init_images\"",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "init_images",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /init-image/{id}"
          }
        }
      }
    },
    "/variations/unzoom": {
      "post": {
        "tags": [
          "Variation"
        ],
        "summary": "Create unzoom",
        "description": "This endpoint will create an unzoom variation for the provided image ID",
        "operationId": "createVariationUnzoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": false,
                    "title": "String",
                    "type": "string"
                  },
                  "isVariation": {
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "sdUnzoomJob": {
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "type": "integer",
                          "description": "API Credits Cost for Unzoom Variation. Available for Production API Users."
                        }
                      },
                      "title": "SDUnzoomOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/v1/variations/unzoom"
          }
        }
      }
    },
    "/variations/upscale": {
      "post": {
        "tags": [
          "Variation"
        ],
        "summary": "Create upscale",
        "description": "This endpoint will create an upscale for the provided image ID",
        "operationId": "createVariationUpscale",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": false,
                    "title": "String",
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters are provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sdUpscaleJob": {
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "type": "integer",
                          "description": "API Credits Cost for Upscale Variation. Available for Production API Users."
                        }
                      },
                      "title": "SDUpscaleJobOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /variations/upscale"
          }
        }
      }
    },
    "/variations/nobg": {
      "post": {
        "tags": [
          "Variation"
        ],
        "summary": "Create no background",
        "description": "This endpoint will create a no background variation of the provided image ID",
        "operationId": "createVariationNoBG",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "nullable": false,
                    "title": "String",
                    "type": "string"
                  },
                  "isVariation": {
                    "nullable": false,
                    "type": "boolean",
                    "title": "Boolean"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters are provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sdNobgJob": {
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "type": "integer",
                          "description": "API Credits Cost for No Background Variation. Available for Production API Users."
                        }
                      },
                      "title": "SDUpscaleJobOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /variations/nobg"
          }
        }
      }
    },
    "/variations/universal-upscaler": {
      "post": {
        "tags": [
          "Variation"
        ],
        "summary": "Create using Universal Upscaler",
        "description": "This endpoint will create a high resolution image using Universal Upscaler",
        "operationId": "CreateUniversalUpscalerJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "initImageId": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The ID of the init image uploaded"
                  },
                  "generatedImageId": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The ID of the generated image"
                  },
                  "upscalerStyle": {
                    "type": "string",
                    "nullable": true,
                    "default": "GENERAL",
                    "title": "universal_upscaler_style",
                    "enum": [
                      "GENERAL",
                      "CINEMATIC",
                      "2D ART & ILLUSTRATION",
                      "CG ART & GAME ASSETS"
                    ],
                    "description": "The style to upscale images using universal upscaler with."
                  },
                  "creativityStrength": {
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "default": 5,
                    "description": "The creativity strength of the universal upscaler, must be integer between 1 and 10"
                  },
                  "upscaleMultiplier": {
                    "nullable": true,
                    "title": "Float",
                    "type": "number",
                    "default": 1.5,
                    "description": "The upscale multiplier of the universal upscaler, must be number between 1.00 and 2.00"
                  },
                  "prompt": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The prompt for the universal upscaler"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters are provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "universalUpscaler": {
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "type": "integer",
                          "description": "API Credits Cost for Universal Upscaler Variation. Available for Production API Users."
                        }
                      },
                      "title": "UniversalUpscalerOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /variations/universal-upscaler"
          }
        }
      }
    },
    "/variations/{id}": {
      "get": {
        "tags": [
          "Variation"
        ],
        "summary": "Get variation by ID",
        "description": "This endpoint will get the variation by ID",
        "operationId": "getVariationById",
        "parameters": [
          {
            "required": true,
            "description": "\"id\" is required",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "generated_image_variation_generic": {
                      "items": {
                        "description": "columns and relationships of \"generated_image_variation_generic\"",
                        "nullable": false,
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "nullable": false,
                            "title": "timestamp"
                          },
                          "id": {
                            "nullable": true,
                            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                            "title": "uuid",
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "nullable": false,
                            "title": "job_status",
                            "enum": [
                              "PENDING",
                              "COMPLETE",
                              "FAILED"
                            ],
                            "description": "The status of the current task."
                          },
                          "transformType": {
                            "type": "string",
                            "nullable": false,
                            "title": "VARIATION_TYPE",
                            "enum": [
                              "OUTPAINT",
                              "INPAINT",
                              "UPSCALE",
                              "UNZOOM",
                              "NOBG"
                            ],
                            "description": "The type of variation."
                          },
                          "url": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          }
                        },
                        "title": "generated_image_variation_generic",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /variations/{id}"
          }
        }
      }
    },
    "/datasets": {
      "post": {
        "tags": [
          "Dataset"
        ],
        "summary": "Create a Dataset",
        "description": "This endpoint creates a new dataset",
        "operationId": "createDataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The name of the dataset."
                  },
                  "description": {
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "A description for the dataset."
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters to be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insert_datasets_one": {
                      "description": "columns and relationships of \"datasets\"",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "datasets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /datasets"
          }
        }
      }
    },
    "/datasets/{id}": {
      "get": {
        "tags": [
          "Dataset"
        ],
        "summary": "Get a Single Dataset by ID",
        "description": "This endpoint gets the specific dataset",
        "operationId": "getDatasetById",
        "parameters": [
          {
            "required": true,
            "description": "The ID of the dataset to return.",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datasets_by_pk": {
                      "description": "columns and relationships of \"datasets\"",
                      "nullable": true,
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "dataset_images": {
                          "items": {
                            "description": "columns and relationships of \"dataset_images\"",
                            "nullable": false,
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "nullable": false,
                                "title": "timestamp"
                              },
                              "id": {
                                "nullable": true,
                                "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                "title": "uuid",
                                "type": "string"
                              },
                              "url": {
                                "nullable": false,
                                "title": "String",
                                "type": "string"
                              }
                            },
                            "title": "dataset_images",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        },
                        "description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        }
                      },
                      "title": "datasets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /datasets/{id}"
          }
        }
      },
      "delete": {
        "tags": [
          "Dataset"
        ],
        "summary": "Delete a Single Dataset by ID",
        "description": "This endpoint deletes the specific dataset",
        "operationId": "deleteDatasetById",
        "parameters": [
          {
            "required": true,
            "description": "The ID of the dataset to delete.",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "delete_datasets_by_pk": {
                      "description": "columns and relationships of \"datasets\"",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "datasets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /datasets/{id}"
          }
        }
      }
    },
    "/datasets/{datasetId}/upload": {
      "post": {
        "tags": [
          "Dataset"
        ],
        "summary": "Upload dataset image",
        "description": "This endpoint returns presigned details to upload a dataset image to S3",
        "operationId": "uploadDatasetImage",
        "parameters": [
          {
            "required": true,
            "description": "_\"datasetId\" is required",
            "in": "path",
            "name": "datasetId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "extension": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "Has to be png, jpg, jpeg, or webp."
                  }
                },
                "required": [
                  "extension"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uploadDatasetImage": {
                      "nullable": true,
                      "properties": {
                        "fields": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "key": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "url": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "DatasetUploadOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /datasets/{datasetId}/upload"
          }
        }
      }
    },
    "/datasets/{datasetId}/upload/gen": {
      "post": {
        "tags": [
          "Dataset"
        ],
        "summary": "Upload a Single Generated Image to a Dataset",
        "description": "This endpoint will upload a previously generated image to the dataset",
        "operationId": "uploadDatasetImageFromGen",
        "parameters": [
          {
            "required": true,
            "description": "The ID of the dataset to upload the image to.",
            "in": "path",
            "name": "datasetId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "generatedImageId": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The ID of the image to upload to the dataset."
                  }
                },
                "required": [
                  "generatedImageId"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters to be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uploadDatasetImageFromGen": {
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "DatasetGenUploadOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /datasets/{datasetId}/upload/gen"
          }
        }
      }
    },
    "/models": {
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Train a Custom Model",
        "description": "This endpoint will train a new custom model",
        "operationId": "createModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The name of the model."
                  },
                  "description": {
                    "default": "",
                    "nullable": true,
                    "title": "String",
                    "type": "string",
                    "description": "The description of the model."
                  },
                  "datasetId": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The ID of the dataset to train the model on."
                  },
                  "instance_prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The instance prompt to use during training."
                  },
                  "modelType": {
                    "type": "string",
                    "default": "GENERAL",
                    "nullable": false,
                    "title": "custom_model_type",
                    "enum": [
                      "GENERAL",
                      "BUILDINGS",
                      "CHARACTERS",
                      "ENVIRONMENTS",
                      "FASHION",
                      "ILLUSTRATIONS",
                      "GAME_ITEMS",
                      "GRAPHICAL_ELEMENTS",
                      "PHOTOGRAPHY",
                      "PIXEL_ART",
                      "PRODUCT_DESIGN",
                      "TEXTURES",
                      "UI_ELEMENTS",
                      "VECTOR"
                    ],
                    "description": "The category the most accurately reflects the model."
                  },
                  "nsfw": {
                    "default": false,
                    "nullable": true,
                    "title": "Boolean",
                    "type": "boolean",
                    "description": "Whether or not the model is NSFW."
                  },
                  "resolution": {
                    "default": 512,
                    "nullable": true,
                    "title": "Int",
                    "type": "integer",
                    "description": "The resolution for training. Must be 512 or 768."
                  },
                  "sd_Version": {
                    "type": "string",
                    "nullable": false,
                    "title": "sd_versions",
                    "enum": [
                      "v1_5",
                      "v2",
                      "v3",
                      "SDXL_0_8",
                      "SDXL_0_9",
                      "SDXL_1_0",
                      "SDXL_LIGHTNING"
                    ],
                    "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                  },
                  "strength": {
                    "type": "string",
                    "nullable": false,
                    "title": "strength",
                    "enum": [
                      "VERY_LOW",
                      "LOW",
                      "MEDIUM",
                      "HIGH"
                    ],
                    "description": "When training using the PIXEL_ART model type, this influences the training strength.",
                    "default": "MEDIUM"
                  }
                },
                "required": [
                  "name",
                  "datasetId",
                  "instance_prompt"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters to be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sdTrainingJob": {
                      "nullable": true,
                      "properties": {
                        "customModelId": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "apiCreditCost": {
                          "nullable": true,
                          "type": "integer",
                          "description": "API Credits Cost for Model Training. Available for Production API Users."
                        }
                      },
                      "title": "SDTrainingOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /models"
          }
        }
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get a Single Custom Model by ID",
        "description": "This endpoint gets the specific custom model",
        "operationId": "getModelById",
        "parameters": [
          {
            "required": true,
            "description": "The ID of the custom model to return.",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "custom_models_by_pk": {
                      "description": "columns and relationships of \"custom_models\"",
                      "nullable": true,
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        },
                        "description": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        },
                        "instancePrompt": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "modelHeight": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "modelWidth": {
                          "nullable": false,
                          "title": "Int",
                          "type": "integer"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "public": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "sdVersion": {
                          "type": "string",
                          "nullable": false,
                          "title": "sd_versions",
                          "enum": [
                            "v1_5",
                            "v2",
                            "v3",
                            "SDXL_0_8",
                            "SDXL_0_9",
                            "SDXL_1_0",
                            "SDXL_LIGHTNING"
                          ],
                          "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                        },
                        "status": {
                          "type": "string",
                          "nullable": false,
                          "title": "job_status",
                          "enum": [
                            "PENDING",
                            "COMPLETE",
                            "FAILED"
                          ],
                          "description": "The status of the current task."
                        },
                        "type": {
                          "type": "string",
                          "default": "GENERAL",
                          "nullable": false,
                          "title": "custom_model_type",
                          "enum": [
                            "GENERAL",
                            "BUILDINGS",
                            "CHARACTERS",
                            "ENVIRONMENTS",
                            "FASHION",
                            "ILLUSTRATIONS",
                            "GAME_ITEMS",
                            "GRAPHICAL_ELEMENTS",
                            "PHOTOGRAPHY",
                            "PIXEL_ART",
                            "PRODUCT_DESIGN",
                            "TEXTURES",
                            "UI_ELEMENTS",
                            "VECTOR"
                          ],
                          "description": "The category the most accurately reflects the model."
                        },
                        "updatedAt": {
                          "type": "string",
                          "nullable": false,
                          "title": "timestamp"
                        }
                      },
                      "title": "custom_models",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /models/{id}"
          }
        }
      },
      "delete": {
        "tags": [
          "Model"
        ],
        "summary": "Delete a Single Custom Model by ID",
        "description": "This endpoint will delete a specific custom model",
        "operationId": "deleteModelById",
        "parameters": [
          {
            "required": true,
            "description": "The ID of the model to delete.",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "delete_custom_models_by_pk": {
                      "description": "columns and relationships of \"custom_models\"",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "nullable": true,
                          "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                          "title": "uuid",
                          "type": "string"
                        }
                      },
                      "title": "custom_models",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /models/{id}"
          }
        }
      }
    },
    "/platformModels": {
      "get": {
        "tags": [
          "Model"
        ],
        "parameters": [],
        "summary": "List Platform Models",
        "description": "Get a list of public Platform Models available for use with generations.",
        "operationId": "listPlatformModels",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "custom_models": {
                      "items": {
                        "description": "columns and relationships of \"custom_models\"",
                        "nullable": false,
                        "properties": {
                          "description": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "featured": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "generated_image": {
                            "description": "columns and relationships of \"generated_images\"",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "nullable": true,
                                "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                                "title": "uuid",
                                "type": "string"
                              },
                              "url": {
                                "nullable": false,
                                "title": "String",
                                "type": "string"
                              }
                            },
                            "title": "generated_images",
                            "type": "object"
                          },
                          "id": {
                            "nullable": true,
                            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
                            "title": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "nsfw": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          }
                        },
                        "title": "custom_models",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/v1/platformModels"
          }
        }
      }
    },
    "/elements": {
      "get": {
        "tags": [
          "Element"
        ],
        "summary": "List Elements",
        "description": "Get a list of public Elements available for use with generations.",
        "operationId": "listElements",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "loras": {
                      "items": {
                        "description": "columns and relationships of \"elements\"",
                        "nullable": false,
                        "properties": {
                          "akUUID": {
                            "nullable": true,
                            "type": "string",
                            "description": "Unique identifier for the element. Elements can be found from the List Elements endpoint."
                          },
                          "baseModel": {
                            "type": "string",
                            "nullable": false,
                            "title": "sd_versions",
                            "enum": [
                              "v1_5",
                              "v2",
                              "v3",
                              "SDXL_0_8",
                              "SDXL_0_9",
                              "SDXL_1_0",
                              "SDXL_LIGHTNING"
                            ],
                            "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
                          },
                          "creatorName": {
                            "nullable": true,
                            "type": "string",
                            "description": "Name of the creator of the element"
                          },
                          "description": {
                            "nullable": true,
                            "type": "string",
                            "description": "Description for the element"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string",
                            "description": "Name of the element"
                          },
                          "urlImage": {
                            "nullable": true,
                            "type": "string",
                            "description": "URL of the element image"
                          },
                          "weightDefault": {
                            "nullable": true,
                            "type": "integer",
                            "description": "Default weight for the element"
                          },
                          "weightMax": {
                            "nullable": true,
                            "type": "integer",
                            "description": "Maximum weight for the element"
                          },
                          "weightMin": {
                            "nullable": true,
                            "type": "integer",
                            "description": "Minimum weight for the element"
                          }
                        },
                        "title": "loras",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/v1/elements"
          }
        }
      }
    },
    "/prompt/random": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "Generate a Random prompt",
        "description": "This endpoint returns a random prompt",
        "operationId": "promptRandom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "promptGeneration": {
                      "nullable": false,
                      "properties": {
                        "prompt": {
                          "nullable": false,
                          "title": "String",
                          "type": "string",
                          "description": "The random prompt generated.",
                          "default": "The random prompt generated."
                        },
                        "apiCreditCost": {
                          "nullable": false,
                          "type": "integer",
                          "description": "API Credits Cost for Random Prompt Generation. Available for Production API Users.",
                          "default": 4
                        }
                      },
                      "title": "promptGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /prompt/random"
          }
        }
      }
    },
    "/prompt/improve": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "Improve a Prompt",
        "description": "This endpoint returns a improved prompt",
        "operationId": "promptImprove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "prompt": {
                    "nullable": false,
                    "title": "String",
                    "type": "string",
                    "description": "The prompt to improve."
                  }
                },
                "required": [
                  "prompt"
                ],
                "type": "object"
              }
            }
          },
          "description": "Query parameters to be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "promptGeneration": {
                      "nullable": false,
                      "properties": {
                        "prompt": {
                          "nullable": false,
                          "title": "String",
                          "type": "string",
                          "description": "The improved prompt.",
                          "default": "The improved prompt."
                        },
                        "apiCreditCost": {
                          "nullable": false,
                          "type": "integer",
                          "description": "API Credits Cost for Random Prompt Generation. Available for Production API Users.",
                          "default": 4
                        }
                      },
                      "title": "promptGenerationOutput",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /prompt/improve"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "apiCreditCost": {
        "nullable": true,
        "title": "Int",
        "type": "integer",
        "description": "API credits cost, available for Production API users."
      },
      "isVariation": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "If it is a variation image."
      },
      "isInitImage": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "If it is an init image uploaded by the user. This image is uploaded from endpoint: Upload init image."
      },
      "imageToVideo": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "If it is an image to video generation."
      },
      "sd_versions": {
        "type": "string",
        "nullable": false,
        "title": "sd_versions",
        "enum": [
          "v1_5",
          "v2",
          "v3",
          "SDXL_0_8",
          "SDXL_0_9",
          "SDXL_1_0",
          "SDXL_LIGHTNING"
        ],
        "description": "The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5. Also includes SDXL and SDXL Lightning models"
      },
      "lora": {
        "type": "object",
        "properties": {
          "akUUID": {
            "nullable": true,
            "type": "string",
            "description": "Unique identifier for the element. Elements can be found from the List Elements endpoint."
          },
          "creatorName": {
            "nullable": true,
            "type": "string",
            "description": "Name of the creator of the element"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name of the element"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "description": "Description for the element"
          },
          "urlImage": {
            "nullable": true,
            "type": "string",
            "description": "URL of the element image"
          },
          "baseModel": {
            "nullable": true,
            "type": "string",
            "description": "Base model version for the element"
          },
          "weightDefault": {
            "nullable": true,
            "type": "integer",
            "description": "Default weight for the element"
          },
          "weightMin": {
            "nullable": true,
            "type": "integer",
            "description": "Minimum weight for the element"
          },
          "weightMax": {
            "nullable": true,
            "type": "integer",
            "description": "Maximum weight for the element"
          },
          "__typename": {
            "type": "string",
            "description": "Type name for introspection purposes"
          }
        }
      },
      "motion": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "If generation is of motion type."
      },
      "motionModel": {
        "nullable": true,
        "title": "String",
        "type": "string",
        "description": "The name of the motion model."
      },
      "motionMP4URL": {
        "nullable": true,
        "title": "String",
        "type": "string",
        "description": "The URL of the motion MP4."
      },
      "motionStrength": {
        "nullable": true,
        "title": "Int",
        "type": "integer",
        "description": "The motion strength."
      },
      "public": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "Whether the generation is public or not"
      },
      "strength": {
        "type": "string",
        "nullable": false,
        "title": "strength",
        "enum": [
          "VERY_LOW",
          "LOW",
          "MEDIUM",
          "HIGH"
        ],
        "description": "When training using the PIXEL_ART model type, this influences the training strength.",
        "default": "MEDIUM"
      },
      "job_status": {
        "type": "string",
        "nullable": false,
        "title": "job_status",
        "enum": [
          "PENDING",
          "COMPLETE",
          "FAILED"
        ],
        "description": "The status of the current task."
      },
      "MODEL_ASSET_TEXTURE_TYPES": {
        "type": "string",
        "default": "NORMAL",
        "nullable": false,
        "title": "MODEL_ASSET_TEXTURE_TYPES",
        "enum": [
          "ALBEDO",
          "NORMAL",
          "ROUGHNESS",
          "DISPLACEMENT",
          "HDRP_MASK"
        ],
        "description": "When training model assets these are the texture types available to use."
      },
      "custom_model_type": {
        "type": "string",
        "default": "GENERAL",
        "nullable": false,
        "title": "custom_model_type",
        "enum": [
          "GENERAL",
          "BUILDINGS",
          "CHARACTERS",
          "ENVIRONMENTS",
          "FASHION",
          "ILLUSTRATIONS",
          "GAME_ITEMS",
          "GRAPHICAL_ELEMENTS",
          "PHOTOGRAPHY",
          "PIXEL_ART",
          "PRODUCT_DESIGN",
          "TEXTURES",
          "UI_ELEMENTS",
          "VECTOR"
        ],
        "description": "The category the most accurately reflects the model."
      },
      "sd_generation_schedulers": {
        "type": "string",
        "nullable": false,
        "title": "sd_generation_schedulers",
        "enum": [
          "KLMS",
          "EULER_ANCESTRAL_DISCRETE",
          "EULER_DISCRETE",
          "DDIM",
          "DPM_SOLVER",
          "PNDM",
          "LEONARDO"
        ],
        "description": "The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified."
      },
      "VARIATION_TYPE": {
        "type": "string",
        "nullable": false,
        "title": "VARIATION_TYPE",
        "enum": [
          "OUTPAINT",
          "INPAINT",
          "UPSCALE",
          "UNZOOM",
          "NOBG"
        ],
        "description": "The type of variation."
      },
      "timestamp": {
        "type": "string",
        "nullable": false,
        "title": "timestamp"
      },
      "element_input": {
        "nullable": false,
        "properties": {
          "akUUID": {
            "nullable": true,
            "title": "String",
            "type": "string",
            "description": "Unique identifier for element. Elements can be found from the List Elements endpoint."
          },
          "weight": {
            "nullable": true,
            "title": "Float",
            "type": "number",
            "description": "Weight for the element"
          }
        },
        "title": "element_input",
        "type": "object"
      },
      "float8": {
        "type": "number",
        "nullable": true,
        "title": "float8"
      },
      "numeric": {
        "type": "number",
        "nullable": true,
        "title": "numeric"
      },
      "bigint": {
        "type": "integer",
        "nullable": true,
        "title": "bigint"
      },
      "sd_generation_style": {
        "type": "string",
        "nullable": true,
        "title": "sd_generation_style",
        "enum": [
          "ANIME",
          "BOKEH",
          "CINEMATIC",
          "CINEMATIC_CLOSEUP",
          "CREATIVE",
          "DYNAMIC",
          "ENVIRONMENT",
          "FASHION",
          "FILM",
          "FOOD",
          "GENERAL",
          "HDR",
          "ILLUSTRATION",
          "LEONARDO",
          "LONG_EXPOSURE",
          "MACRO",
          "MINIMALISTIC",
          "MONOCHROME",
          "MOODY",
          "NONE",
          "NEUTRAL",
          "PHOTOGRAPHY",
          "PORTRAIT",
          "RAYTRACED",
          "RENDER_3D",
          "RETRO",
          "SKETCH_BW",
          "SKETCH_COLOR",
          "STOCK_PHOTO",
          "VIBRANT",
          "UNPROCESSED"
        ],
        "description": "The style to generate images with. When photoReal is enabled, refer to the Guide section for a full list. When alchemy is disabled, use LEONARDO or NONE. When alchemy is enabled, use ANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE.",
        "default": "DYNAMIC"
      },
      "lcm_generation_style": {
        "type": "string",
        "nullable": true,
        "title": "lcm_generation_style",
        "enum": [
          "ANIME",
          "CINEMATIC",
          "DIGITAL_ART",
          "DYNAMIC",
          "ENVIRONMENT",
          "FANTASY_ART",
          "ILLUSTRATION",
          "PHOTOGRAPHY",
          "RENDER_3D",
          "RAYTRACED",
          "SKETCH_BW",
          "SKETCH_COLOR",
          "VIBRANT",
          "NONE"
        ],
        "description": "The style to generate LCM images with."
      },
      "universal_upscaler_style": {
        "type": "string",
        "nullable": true,
        "default": "GENERAL",
        "title": "universal_upscaler_style",
        "enum": [
          "GENERAL",
          "CINEMATIC",
          "2D ART & ILLUSTRATION",
          "CG ART & GAME ASSETS"
        ],
        "description": "The style to upscale images using universal upscaler with."
      },
      "controlnet_type": {
        "type": "string",
        "nullable": false,
        "title": "controlnet_type",
        "enum": [
          "POSE",
          "CANNY",
          "DEPTH"
        ],
        "description": "The type of ControlNet to use."
      },
      "uuid": {
        "nullable": true,
        "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
        "title": "uuid",
        "type": "string"
      },
      "photoRealArg": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "Enable the photoReal feature. Requires enabling alchemy and unspecifying modelId (for photoRealVersion V1)."
      },
      "photoRealVersion": {
        "nullable": true,
        "title": "String",
        "type": "string",
        "description": "The version of photoReal to use. Must be v1 or v2."
      },
      "photoRealRes": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "If photoReal feature was used."
      },
      "photoRealStrengthArg": {
        "nullable": true,
        "title": "Float",
        "type": "number",
        "description": "Depth of field of photoReal. Must be 0.55 for low, 0.5 for medium, or 0.45 for high. Defaults to 0.55 if not specified."
      },
      "photoRealStrengthRes": {
        "nullable": true,
        "title": "Float",
        "type": "number",
        "description": "Depth of field of photoReal used. 0.55 is low, 0.5 is medium, and 0.45 is high. Default is 0.55."
      },
      "promptMagicArg": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "Enable to use Prompt Magic."
      },
      "promptMagicRes": {
        "nullable": true,
        "title": "Boolean",
        "type": "boolean",
        "description": "If prompt magic was used."
      },
      "promptMagicVersionArg": {
        "nullable": true,
        "title": "String",
        "type": "string",
        "description": "Prompt magic version v2 or v3, for use when promptMagic: true"
      },
      "promptMagicVersionRes": {
        "nullable": true,
        "title": "String",
        "type": "string",
        "description": "Version of prompt magic used."
      },
      "promptMagicStrengthArg": {
        "nullable": true,
        "title": "Float",
        "type": "number",
        "description": "Strength of prompt magic. Must be a float between 0.1 and 1.0"
      },
      "promptMagicStrengthRes": {
        "nullable": true,
        "title": "Float",
        "type": "number",
        "description": "Strength of prompt magic used."
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "bearerFormat": "auth-scheme",
        "description": "Bearer HTTP authentication. Allowed headers `Authorization: Bearer <api_key>`",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}